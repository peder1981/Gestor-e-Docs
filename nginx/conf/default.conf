# Frontend HTTPS
# Configurações gerais do proxy
proxy_headers_hash_max_size 1024;
proxy_headers_hash_bucket_size 128;

# Configurações de rate limiting
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=60r/m;

server {
    listen 443 ssl;
    server_name localhost;
    
    ssl_certificate /etc/nginx/certs/nginx.crt;
    ssl_certificate_key /etc/nginx/certs/nginx.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # Headers de segurança padrão
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Frontend app
    location = / {
        return 301 /auth/login;
    }

    location /auth/ {
        proxy_pass http://frontend_app:80/auth/;
        # Headers padrão para proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        proxy_redirect off;

        # Configurações de cookies
        proxy_cookie_path / /;
        proxy_cookie_domain localhost $host;

        # Headers CORS dinâmicos
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, HEAD' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,Cookie' always;
        add_header 'Access-Control-Expose-Headers' 'Set-Cookie' always;
    }

    location / {
        proxy_pass http://frontend_app:80/;
        # Headers padrão para proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        proxy_redirect off;

        # Configurações de cookies
        proxy_cookie_path / /;
        proxy_cookie_domain localhost $host;

        # Headers CORS dinâmicos
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, HEAD' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,Cookie' always;
        add_header 'Access-Control-Expose-Headers' 'Set-Cookie' always;
    }
    
    # Document service API
    location /api/v1/documents/ {
        proxy_pass http://document_service:8185/;
        # Headers padrão para proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        
        # Configurações de cookies consistentes com o identity-service
        proxy_cookie_path / /;
        proxy_cookie_domain localhost $host;
        
        # Headers CORS para permitir cookies
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, HEAD' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,Cookie' always;
        add_header 'Access-Control-Expose-Headers' 'Set-Cookie' always;

        # Tratamento especial para OPTIONS (preflight CORS)
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, HEAD' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,Cookie' always;
            add_header 'Access-Control-Expose-Headers' 'Set-Cookie' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Aumentar timeouts para operações com documentos grandes
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Identity service API
    location /api/v1/identity/ {
        # Rate limiting para endpoints de autenticação
        limit_req zone=login_limit burst=30 nodelay;
        
        # Configurações de CORS para permitir cookies
        proxy_pass http://identity_service:8085;
        # Headers padrão para proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;

        # Configurações de cookies
        proxy_cookie_path / /;
        proxy_cookie_domain localhost $host;

        # Headers CORS dinâmicos
        set $cors_headers 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,Cookie';
        
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, HEAD' always;
        add_header 'Access-Control-Allow-Headers' $cors_headers always;
        add_header 'Access-Control-Expose-Headers' 'Set-Cookie' always;

        # Tratamento especial para OPTIONS e HEAD (preflight CORS)
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Increase timeouts for JWT operations
        proxy_connect_timeout 180s;
        proxy_send_timeout 180s;
        proxy_read_timeout 180s;
    }
    
    # Health check endpoints
    location /health/identity {
        proxy_pass http://identity_service:8085/health;
        proxy_set_header Host $host;
    }
    
    location /health/document {
        proxy_pass http://document_service:8185/health;
        proxy_set_header Host $host;
    }
    
    # Logging
    access_log /var/log/nginx/frontend_access.log;
    error_log /var/log/nginx/frontend_error.log;
}

# API Identity Service
server {
    listen 8085 ssl;
    server_name localhost;
    
    ssl_certificate /etc/nginx/certs/nginx.crt;
    ssl_certificate_key /etc/nginx/certs/nginx.key;
    
    location / {
        proxy_pass http://identity_service:8085;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
    }
    
    # Logging
    access_log /var/log/nginx/identity_access.log;
    error_log /var/log/nginx/identity_error.log;
}

# API Document Service
server {
    listen 8185 ssl;
    server_name localhost;
    
    ssl_certificate /etc/nginx/certs/nginx.crt;
    ssl_certificate_key /etc/nginx/certs/nginx.key;
    
    location / {
        proxy_pass http://document_service:8185;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
    }
    
    # Logging
    access_log /var/log/nginx/document_access.log;
    error_log /var/log/nginx/document_error.log;
}

# API Conversion Service
server {
    listen 8285 ssl;
    server_name localhost;
    
    ssl_certificate /etc/nginx/certs/nginx.crt;
    ssl_certificate_key /etc/nginx/certs/nginx.key;
    
    location / {
        proxy_pass http://conversion_service:8285;
        # Headers padrão para proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        
        # Configurações de cookies consistentes
        proxy_cookie_path / /;
        proxy_cookie_domain localhost $host;
        
        # Headers CORS para permitir cookies
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, HEAD' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,Cookie' always;
        add_header 'Access-Control-Expose-Headers' 'Set-Cookie' always;

        # Tratamento especial para OPTIONS (preflight CORS)
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, HEAD' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,Cookie' always;
            add_header 'Access-Control-Expose-Headers' 'Set-Cookie' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Timeouts aumentados para operações de conversão
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }
    
    # Logging
    access_log /var/log/nginx/conversion_access.log;
    error_log /var/log/nginx/conversion_error.log;
}

# Endpoint para métricas do Nginx
server {
    listen 8080;
    server_name localhost;

    location /stub_status {
        stub_status;
        allow 127.0.0.1;
        allow 172.16.0.0/12;  # Range de IPs da rede Docker
        deny all;
    }
}

# MinIO Console
server {
    listen 9185 ssl;
    server_name localhost;
    
    ssl_certificate /etc/nginx/certs/nginx.crt;
    ssl_certificate_key /etc/nginx/certs/nginx.key;
    
    location / {
        proxy_pass http://minio_server:9001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Logging
    access_log /var/log/nginx/minio_console_access.log;
    error_log /var/log/nginx/minio_console_error.log;
}

# MinIO API
server {
    listen 9085 ssl;
    server_name localhost;
    
    ssl_certificate /etc/nginx/certs/nginx.crt;
    ssl_certificate_key /etc/nginx/certs/nginx.key;
    
    location / {
        proxy_pass http://minio_server:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_http_version 1.1;
    }
    
    # Logging
    access_log /var/log/nginx/minio_api_access.log;
    error_log /var/log/nginx/minio_api_error.log;
}
